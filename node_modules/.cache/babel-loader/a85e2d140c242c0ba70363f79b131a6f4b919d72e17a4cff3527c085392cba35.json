{"ast":null,"code":"var _jsxFileName = \"/Users/zakrab/Documents/code/Projects/ZakPortfolio/zak-portfolio/src/components/ParallaxText.jsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { motion, useScroll, useSpring, useTransform, useMotionValue, useVelocity, useAnimationFrame } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParallaxText({\n  children,\n  baseVelocity = 100\n}) {\n  _s();\n  const baseX = useMotionValue(0);\n  const {\n    scrollY\n  } = useScroll();\n  const scrollVelocity = useVelocity(scrollY);\n  const smoothVelocity = useSpring(scrollVelocity, {\n    damping: 50,\n    stiffness: 400\n  });\n  const velocityFactor = useTransform(smoothVelocity, [0, 1000], [0, 5], {\n    clamp: false\n  });\n\n  /**\n   * This is a magic wrapping for the length of the text - you\n   * have to replace for wrapping that works for you or dynamically\n   * calculate\n   */\n  const x = useTransform(baseX, v => `${wrap(-20, -45, v)}%`);\n  const directionFactor = useRef();\n  useAnimationFrame((t, delta) => {\n    let moveBy = directionFactor.current * baseVelocity * (delta / 1000);\n\n    /**\n     * This is what changes the direction of the scroll once we\n     * switch scrolling directions.\n     */\n    if (velocityFactor.get() < 0) {\n      directionFactor.current = -1;\n    } else if (velocityFactor.get() > 0) {\n      directionFactor.current = 1;\n    }\n    moveBy += directionFactor.current * moveBy * velocityFactor.get();\n    baseX.set(baseX.get() + moveBy);\n  });\n\n  /**\n   * The number of times to repeat the child text should be dynamically calculated\n   * based on the size of the text and viewport. Likewise, the x motion value is\n   * currently wrapped between -20 and -45% - this 25% is derived from the fact\n   * we have four children (100% / 4). This would also want deriving from the\n   * dynamically generated number of children.\n   */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"parallax\",\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"scroller\",\n      style: {\n        x\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [children, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [children, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [children, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [children, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(ParallaxText, \"vXPtw7zOnTipFF1aeUa9IWqP1xA=\", false, function () {\n  return [useMotionValue, useScroll, useVelocity, useSpring, useTransform, useTransform, useAnimationFrame];\n});\n_c = ParallaxText;\nvar _c;\n$RefreshReg$(_c, \"ParallaxText\");","map":{"version":3,"names":["useRef","motion","useScroll","useSpring","useTransform","useMotionValue","useVelocity","useAnimationFrame","jsxDEV","_jsxDEV","ParallaxText","children","baseVelocity","_s","baseX","scrollY","scrollVelocity","smoothVelocity","damping","stiffness","velocityFactor","clamp","x","v","wrap","directionFactor","t","delta","moveBy","current","get","set","className","div","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zakrab/Documents/code/Projects/ZakPortfolio/zak-portfolio/src/components/ParallaxText.jsx"],"sourcesContent":["import { useRef } from \"react\";\nimport {\n  motion,\n  useScroll,\n  useSpring,\n  useTransform,\n  useMotionValue,\n  useVelocity,\n  useAnimationFrame,\n} from \"framer-motion\";\n\nexport default function ParallaxText({ children, baseVelocity = 100 }) {\n  const baseX = useMotionValue(0);\n  const { scrollY } = useScroll();\n  const scrollVelocity = useVelocity(scrollY);\n  const smoothVelocity = useSpring(scrollVelocity, {\n    damping: 50,\n    stiffness: 400,\n  });\n  const velocityFactor = useTransform(smoothVelocity, [0, 1000], [0, 5], {\n    clamp: false,\n  });\n\n  /**\n   * This is a magic wrapping for the length of the text - you\n   * have to replace for wrapping that works for you or dynamically\n   * calculate\n   */\n  const x = useTransform(baseX, (v) => `${wrap(-20, -45, v)}%`);\n\n  const directionFactor = useRef();\n  useAnimationFrame((t, delta) => {\n    let moveBy = directionFactor.current * baseVelocity * (delta / 1000);\n\n    /**\n     * This is what changes the direction of the scroll once we\n     * switch scrolling directions.\n     */\n    if (velocityFactor.get() < 0) {\n      directionFactor.current = -1;\n    } else if (velocityFactor.get() > 0) {\n      directionFactor.current = 1;\n    }\n\n    moveBy += directionFactor.current * moveBy * velocityFactor.get();\n\n    baseX.set(baseX.get() + moveBy);\n  });\n\n  /**\n   * The number of times to repeat the child text should be dynamically calculated\n   * based on the size of the text and viewport. Likewise, the x motion value is\n   * currently wrapped between -20 and -45% - this 25% is derived from the fact\n   * we have four children (100% / 4). This would also want deriving from the\n   * dynamically generated number of children.\n   */\n  return (\n    <div className=\"parallax\">\n      <motion.div className=\"scroller\" style={{ x }}>\n        <span>{children} </span>\n        <span>{children} </span>\n        <span>{children} </span>\n        <span>{children} </span>\n      </motion.div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SACEC,MAAM,EACNC,SAAS,EACTC,SAAS,EACTC,YAAY,EACZC,cAAc,EACdC,WAAW,EACXC,iBAAiB,QACZ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,eAAe,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG;AAAI,CAAC,EAAE;EAAAC,EAAA;EACrE,MAAMC,KAAK,GAAGT,cAAc,CAAC,CAAC,CAAC;EAC/B,MAAM;IAAEU;EAAQ,CAAC,GAAGb,SAAS,CAAC,CAAC;EAC/B,MAAMc,cAAc,GAAGV,WAAW,CAACS,OAAO,CAAC;EAC3C,MAAME,cAAc,GAAGd,SAAS,CAACa,cAAc,EAAE;IAC/CE,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,MAAMC,cAAc,GAAGhB,YAAY,CAACa,cAAc,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IACrEI,KAAK,EAAE;EACT,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;EACE,MAAMC,CAAC,GAAGlB,YAAY,CAACU,KAAK,EAAGS,CAAC,IAAK,GAAGC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAED,CAAC,CAAC,GAAG,CAAC;EAE7D,MAAME,eAAe,GAAGzB,MAAM,CAAC,CAAC;EAChCO,iBAAiB,CAAC,CAACmB,CAAC,EAAEC,KAAK,KAAK;IAC9B,IAAIC,MAAM,GAAGH,eAAe,CAACI,OAAO,GAAGjB,YAAY,IAAIe,KAAK,GAAG,IAAI,CAAC;;IAEpE;AACJ;AACA;AACA;IACI,IAAIP,cAAc,CAACU,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;MAC5BL,eAAe,CAACI,OAAO,GAAG,CAAC,CAAC;IAC9B,CAAC,MAAM,IAAIT,cAAc,CAACU,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;MACnCL,eAAe,CAACI,OAAO,GAAG,CAAC;IAC7B;IAEAD,MAAM,IAAIH,eAAe,CAACI,OAAO,GAAGD,MAAM,GAAGR,cAAc,CAACU,GAAG,CAAC,CAAC;IAEjEhB,KAAK,CAACiB,GAAG,CAACjB,KAAK,CAACgB,GAAG,CAAC,CAAC,GAAGF,MAAM,CAAC;EACjC,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;AACA;EACE,oBACEnB,OAAA;IAAKuB,SAAS,EAAC,UAAU;IAAArB,QAAA,eACvBF,OAAA,CAACR,MAAM,CAACgC,GAAG;MAACD,SAAS,EAAC,UAAU;MAACE,KAAK,EAAE;QAAEZ;MAAE,CAAE;MAAAX,QAAA,gBAC5CF,OAAA;QAAAE,QAAA,GAAOA,QAAQ,EAAC,GAAC;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxB7B,OAAA;QAAAE,QAAA,GAAOA,QAAQ,EAAC,GAAC;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxB7B,OAAA;QAAAE,QAAA,GAAOA,QAAQ,EAAC,GAAC;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxB7B,OAAA;QAAAE,QAAA,GAAOA,QAAQ,EAAC,GAAC;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACzB,EAAA,CAvDuBH,YAAY;EAAA,QACpBL,cAAc,EACRH,SAAS,EACNI,WAAW,EACXH,SAAS,EAITC,YAAY,EASzBA,YAAY,EAGtBG,iBAAiB;AAAA;AAAAgC,EAAA,GApBK7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}