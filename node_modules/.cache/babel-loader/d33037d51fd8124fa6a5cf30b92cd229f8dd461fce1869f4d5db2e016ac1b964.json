{"ast":null,"code":"import{useRef}from\"react\";import{motion,useScroll,useSpring,useTransform,useMotionValue,useVelocity,useAnimationFrame}from\"framer-motion\";import{wrap}from\"@motionone/utils\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";export default function ParallaxText(_ref){let{children,baseVelocity=100}=_ref;const baseX=useMotionValue(0);const{scrollY}=useScroll();const scrollVelocity=useVelocity(scrollY);const smoothVelocity=useSpring(scrollVelocity,{damping:50,stiffness:400});const velocityFactor=useTransform(smoothVelocity,[0,1000],[0,5],{clamp:false});/**\n   * This is a magic wrapping for the length of the text - you\n   * have to replace for wrapping that works for you or dynamically\n   * calculate\n   */const x=useTransform(baseX,v=>`${wrap(-20,-45,v)}%`);const directionFactor=useRef(1);useAnimationFrame((t,delta)=>{let moveBy=directionFactor.current*baseVelocity*(delta/1000);/**\n     * This is what changes the direction of the scroll once we\n     * switch scrolling directions.\n     */if(velocityFactor.get()<0){directionFactor.current=-1;}else if(velocityFactor.get()>0){directionFactor.current=1;}moveBy+=directionFactor.current*moveBy*velocityFactor.get();baseX.set(baseX.get()+moveBy);});/**\n   * The number of times to repeat the child text should be dynamically calculated\n   * based on the size of the text and viewport. Likewise, the x motion value is\n   * currently wrapped between -20 and -45% - this 25% is derived from the fact\n   * we have four children (100% / 4). This would also want deriving from the\n   * dynamically generated number of children.\n   */return/*#__PURE__*/_jsx(\"div\",{className:\"parallax\",children:/*#__PURE__*/_jsxs(motion.div,{className:\"scroller\",style:{x},children:[/*#__PURE__*/_jsxs(\"span\",{children:[children,\" \"]}),/*#__PURE__*/_jsxs(\"span\",{children:[children,\" \"]}),/*#__PURE__*/_jsxs(\"span\",{children:[children,\" \"]}),/*#__PURE__*/_jsxs(\"span\",{children:[children,\" \"]})]})});}","map":{"version":3,"names":["useRef","motion","useScroll","useSpring","useTransform","useMotionValue","useVelocity","useAnimationFrame","wrap","jsxs","_jsxs","jsx","_jsx","ParallaxText","_ref","children","baseVelocity","baseX","scrollY","scrollVelocity","smoothVelocity","damping","stiffness","velocityFactor","clamp","x","v","directionFactor","t","delta","moveBy","current","get","set","className","div","style"],"sources":["/Users/zakrab/Documents/code/Projects/ZakPortfolio/zak-portfolio/src/components/ParallaxText.jsx"],"sourcesContent":["import { useRef } from \"react\";\nimport {\n  motion,\n  useScroll,\n  useSpring,\n  useTransform,\n  useMotionValue,\n  useVelocity,\n  useAnimationFrame,\n} from \"framer-motion\";\nimport { wrap } from \"@motionone/utils\";\n\nexport default function ParallaxText({ children, baseVelocity = 100 }) {\n  const baseX = useMotionValue(0);\n  const { scrollY } = useScroll();\n  const scrollVelocity = useVelocity(scrollY);\n  const smoothVelocity = useSpring(scrollVelocity, {\n    damping: 50,\n    stiffness: 400,\n  });\n  const velocityFactor = useTransform(smoothVelocity, [0, 1000], [0, 5], {\n    clamp: false,\n  });\n\n  /**\n   * This is a magic wrapping for the length of the text - you\n   * have to replace for wrapping that works for you or dynamically\n   * calculate\n   */\n  const x = useTransform(baseX, (v) => `${wrap(-20, -45, v)}%`);\n\n  const directionFactor = useRef(1);\n  useAnimationFrame((t, delta) => {\n    let moveBy = directionFactor.current * baseVelocity * (delta / 1000);\n\n    /**\n     * This is what changes the direction of the scroll once we\n     * switch scrolling directions.\n     */\n    if (velocityFactor.get() < 0) {\n      directionFactor.current = -1;\n    } else if (velocityFactor.get() > 0) {\n      directionFactor.current = 1;\n    }\n\n    moveBy += directionFactor.current * moveBy * velocityFactor.get();\n\n    baseX.set(baseX.get() + moveBy);\n  });\n\n  /**\n   * The number of times to repeat the child text should be dynamically calculated\n   * based on the size of the text and viewport. Likewise, the x motion value is\n   * currently wrapped between -20 and -45% - this 25% is derived from the fact\n   * we have four children (100% / 4). This would also want deriving from the\n   * dynamically generated number of children.\n   */\n  return (\n    <div className=\"parallax\">\n      <motion.div className=\"scroller\" style={{ x }}>\n        <span>{children} </span>\n        <span>{children} </span>\n        <span>{children} </span>\n        <span>{children} </span>\n      </motion.div>\n    </div>\n  );\n}\n"],"mappings":"AAAA,OAASA,MAAM,KAAQ,OAAO,CAC9B,OACEC,MAAM,CACNC,SAAS,CACTC,SAAS,CACTC,YAAY,CACZC,cAAc,CACdC,WAAW,CACXC,iBAAiB,KACZ,eAAe,CACtB,OAASC,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAExC,cAAe,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAmC,IAAlC,CAAEC,QAAQ,CAAEC,YAAY,CAAG,GAAI,CAAC,CAAAF,IAAA,CACnE,KAAM,CAAAG,KAAK,CAAGZ,cAAc,CAAC,CAAC,CAAC,CAC/B,KAAM,CAAEa,OAAQ,CAAC,CAAGhB,SAAS,CAAC,CAAC,CAC/B,KAAM,CAAAiB,cAAc,CAAGb,WAAW,CAACY,OAAO,CAAC,CAC3C,KAAM,CAAAE,cAAc,CAAGjB,SAAS,CAACgB,cAAc,CAAE,CAC/CE,OAAO,CAAE,EAAE,CACXC,SAAS,CAAE,GACb,CAAC,CAAC,CACF,KAAM,CAAAC,cAAc,CAAGnB,YAAY,CAACgB,cAAc,CAAE,CAAC,CAAC,CAAE,IAAI,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CACrEI,KAAK,CAAE,KACT,CAAC,CAAC,CAEF;AACF;AACA;AACA;AACA,KACE,KAAM,CAAAC,CAAC,CAAGrB,YAAY,CAACa,KAAK,CAAGS,CAAC,EAAK,GAAGlB,IAAI,CAAC,CAAC,EAAE,CAAE,CAAC,EAAE,CAAEkB,CAAC,CAAC,GAAG,CAAC,CAE7D,KAAM,CAAAC,eAAe,CAAG3B,MAAM,CAAC,CAAC,CAAC,CACjCO,iBAAiB,CAAC,CAACqB,CAAC,CAAEC,KAAK,GAAK,CAC9B,GAAI,CAAAC,MAAM,CAAGH,eAAe,CAACI,OAAO,CAAGf,YAAY,EAAIa,KAAK,CAAG,IAAI,CAAC,CAEpE;AACJ;AACA;AACA,OACI,GAAIN,cAAc,CAACS,GAAG,CAAC,CAAC,CAAG,CAAC,CAAE,CAC5BL,eAAe,CAACI,OAAO,CAAG,CAAC,CAAC,CAC9B,CAAC,IAAM,IAAIR,cAAc,CAACS,GAAG,CAAC,CAAC,CAAG,CAAC,CAAE,CACnCL,eAAe,CAACI,OAAO,CAAG,CAAC,CAC7B,CAEAD,MAAM,EAAIH,eAAe,CAACI,OAAO,CAAGD,MAAM,CAAGP,cAAc,CAACS,GAAG,CAAC,CAAC,CAEjEf,KAAK,CAACgB,GAAG,CAAChB,KAAK,CAACe,GAAG,CAAC,CAAC,CAAGF,MAAM,CAAC,CACjC,CAAC,CAAC,CAEF;AACF;AACA;AACA;AACA;AACA;AACA,KACE,mBACElB,IAAA,QAAKsB,SAAS,CAAC,UAAU,CAAAnB,QAAA,cACvBL,KAAA,CAACT,MAAM,CAACkC,GAAG,EAACD,SAAS,CAAC,UAAU,CAACE,KAAK,CAAE,CAAEX,CAAE,CAAE,CAAAV,QAAA,eAC5CL,KAAA,SAAAK,QAAA,EAAOA,QAAQ,CAAC,GAAC,EAAM,CAAC,cACxBL,KAAA,SAAAK,QAAA,EAAOA,QAAQ,CAAC,GAAC,EAAM,CAAC,cACxBL,KAAA,SAAAK,QAAA,EAAOA,QAAQ,CAAC,GAAC,EAAM,CAAC,cACxBL,KAAA,SAAAK,QAAA,EAAOA,QAAQ,CAAC,GAAC,EAAM,CAAC,EACd,CAAC,CACV,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}